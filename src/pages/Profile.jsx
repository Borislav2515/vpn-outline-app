import React, { useState, useEffect } from 'react';
import { Mail, Calendar, Shield, Settings, Edit, Camera, User } from 'lucide-react';
import './Profile.css';
import userDataAPI from '../api/userData';

const Profile = () => {
  const [isEditing, setIsEditing] = useState(false);
  const [user, setUser] = useState({
    name: '–ó–∞–≥—Ä—É–∑–∫–∞...',
    email: '–ó–∞–≥—Ä—É–∑–∫–∞...',
    joinDate: '–ó–∞–≥—Ä—É–∑–∫–∞...',
    plan: '–ó–∞–≥—Ä—É–∑–∫–∞...',
    status: '–ó–∞–≥—Ä—É–∑–∫–∞...',
    avatar: 'üë§',
    gender: 'unknown'
  });

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (Telegram Web App)
  useEffect(() => {
    const loadUserData = async () => {
      const telegramUser = userDataAPI.getTelegramUserData();
      
      console.log('üîç –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ URL:', telegramUser);
      console.log('üîç –í—Å–µ URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', window.location.search);

      if (telegramUser.first_name) {
        const fullName = telegramUser.last_name 
          ? `${telegramUser.first_name} ${telegramUser.last_name}`
          : telegramUser.first_name;
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª –ø–æ –∏–º–µ–Ω–∏ (–ø—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞)
        const isMale = /[–∞-—è—ë]*(–æ–≤|–µ–≤|–∏–Ω|—ã–π|–æ–π|–∏–π|–æ–≤—Å–∫–∏–π|–µ–≤—Å–∫–∏–π|–∏–Ω—Å–∫–∏–π)$/i.test(fullName);
        const isFemale = /[–∞-—è—ë]*(–æ–≤–∞|–µ–≤–∞|–∏–Ω–∞|–∞—è|—è—è|–∞—è|–æ–≤—Å–∫–∞—è|–µ–≤—Å–∫–∞—è|–∏–Ω—Å–∫–∞—è)$/i.test(fullName);
        
        let gender = 'unknown';
        let avatar = 'üë§';
        
        if (isMale) {
          gender = 'male';
          avatar = 'üë®';
        } else if (isFemale) {
          gender = 'female';
          avatar = 'üë©';
        }

        setUser({
          name: fullName,
          email: telegramUser.username ? `${telegramUser.username}@telegram.org` : 'user@telegram.org',
          joinDate: '–°–µ–≥–æ–¥–Ω—è',
          plan: 'Premium',
          status: '–ê–∫—Ç–∏–≤–µ–Ω',
          avatar: avatar,
          gender: gender,
          telegramId: telegramUser.id,
          username: telegramUser.username
        });

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (telegramUser.id) {
          const userStats = await userDataAPI.getUserStats(telegramUser.id);
          setStats(userStats);
        }
      }
    };

    loadUserData();
  }, []);

  const [stats, setStats] = useState({
    totalConnections: 0,
    totalData: '0 –ì–ë',
    favoriteServer: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö',
    lastConnection: '–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π'
  });

  const settings = [
    { icon: Shield, title: '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', subtitle: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏' },
    { icon: Settings, title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏', subtitle: '–û–±—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏' },
    { icon: Mail, title: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è', subtitle: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π' },
    { icon: Calendar, title: '–ò—Å—Ç–æ—Ä–∏—è', subtitle: '–ò—Å—Ç–æ—Ä–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π' }
  ];

  return (
    <div className="profile">
      {/* Profile Header */}
      <div className="card profile-header">
        <div className="profile-avatar-section">
          <div className="profile-avatar">
            <span className="avatar-text">{user.avatar}</span>
            <button className="avatar-edit-btn">
              <Camera size={16} />
            </button>
          </div>
          
          <div className="profile-info">
            <h2 className="profile-name">{user.name}</h2>
            <div className="profile-plan">
              <Shield size={16} />
              <span>{user.plan}</span>
            </div>
            <div className="profile-status">
              <div className="status-indicator status-connected"></div>
              <span>{user.status}</span>
            </div>
          </div>
          
          <button 
            className="edit-profile-btn"
            onClick={() => setIsEditing(!isEditing)}
          >
            <Edit size={20} />
          </button>
        </div>
      </div>

      {/* User Stats */}
      <div className="card stats-card">
        <div className="card-header">
          <h3>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h3>
        </div>
        
        <div className="stats-list">
          <div className="stat-row">
            <div className="stat-label">
              <Shield size={16} />
              <span>–í—Å–µ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π</span>
            </div>
            <span className="stat-value">{stats.totalConnections}</span>
          </div>
          
          <div className="stat-row">
            <div className="stat-label">
              <Shield size={16} />
              <span>–ü–µ—Ä–µ–¥–∞–Ω–Ω—ã–π —Ç—Ä–∞—Ñ–∏–∫</span>
            </div>
            <span className="stat-value">{stats.totalData}</span>
          </div>
          
          <div className="stat-row">
            <div className="stat-label">
              <Shield size={16} />
              <span>–õ—é–±–∏–º—ã–π —Å–µ—Ä–≤–µ—Ä</span>
            </div>
            <span className="stat-value">{stats.favoriteServer}</span>
          </div>
          
          <div className="stat-row">
            <div className="stat-label">
              <Shield size={16} />
              <span>–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ</span>
            </div>
            <span className="stat-value">{stats.lastConnection}</span>
          </div>
        </div>
      </div>

      {/* Account Info */}
      <div className="card account-card">
        <div className="card-header">
          <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ</h3>
        </div>
        
        <div className="account-info">
          <div className="info-row">
            <div className="info-label">
              <User size={16} />
              <span>Telegram ID</span>
            </div>
            <span className="info-value">{user.telegramId || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
          </div>
          
          <div className="info-row">
            <div className="info-label">
              <Mail size={16} />
              <span>Username</span>
            </div>
            <span className="info-value">@{user.username || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
          </div>
          
          <div className="info-row">
            <div className="info-label">
              <Calendar size={16} />
              <span>–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏</span>
            </div>
            <span className="info-value">{user.joinDate}</span>
          </div>
          
          <div className="info-row">
            <div className="info-label">
              <Shield size={16} />
              <span>–¢–∞—Ä–∏—Ñ–Ω—ã–π –ø–ª–∞–Ω</span>
            </div>
            <span className="info-value plan-badge">{user.plan}</span>
          </div>
        </div>
      </div>

      {/* Settings */}
      <div className="card settings-card">
        <div className="card-header">
          <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h3>
        </div>
        
        <div className="settings-list">
          {settings.map((setting, index) => {
            const Icon = setting.icon;
            return (
              <button key={index} className="setting-item">
                <div className="setting-icon">
                  <Icon size={20} />
                </div>
                <div className="setting-content">
                  <span className="setting-title">{setting.title}</span>
                  <span className="setting-subtitle">{setting.subtitle}</span>
                </div>
                <div className="setting-arrow">‚Ä∫</div>
              </button>
            );
          })}
        </div>
      </div>

    </div>
  );
};

export default Profile; 