import React, { useState } from 'react';
import { MessageCircle, Mail, Phone, Clock, Send, FileText, Video, Star } from 'lucide-react';
import './Support.css';

const Support = () => {
  const [selectedMethod, setSelectedMethod] = useState('chat');
  const [message, setMessage] = useState('');

  const supportMethods = [
    {
      id: 'chat',
      title: '–û–Ω–ª–∞–π–Ω —á–∞—Ç',
      subtitle: '–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      icon: MessageCircle,
      color: '#28a745',
      description: '–ü–æ–ª—É—á–∏—Ç–µ –ø–æ–º–æ—â—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ –æ—Ç –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏',
      responseTime: '1-2 –º–∏–Ω—É—Ç—ã'
    },
    {
      id: 'email',
      title: 'Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      subtitle: '–ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã',
      icon: Mail,
      color: '#007bff',
      description: '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç',
      responseTime: '2-4 —á–∞—Å–∞'
    },
    {
      id: 'phone',
      title: '–¢–µ–ª–µ—Ñ–æ–Ω',
      subtitle: '–ì–æ–ª–æ—Å–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      icon: Phone,
      color: '#dc3545',
      description: '–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π –ø–æ–º–æ—â–∏',
      responseTime: '–ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ'
    }
  ];

  const quickTopics = [
    { title: '–ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º', icon: MessageCircle },
    { title: '–û–ø–ª–∞—Ç–∞ –∏ —Ç–∞—Ä–∏—Ñ—ã', icon: FileText },
    { title: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏', icon: Star },
    { title: '–í–∏–¥–µ–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏', icon: Video }
  ];

  const workingHours = [
    { day: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞', time: '09:00 - 21:00' },
    { day: '–°—É–±–±–æ—Ç–∞', time: '10:00 - 18:00' },
    { day: '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ', time: '12:00 - 16:00' }
  ];

  const handleSubmit = (e) => {
    e.preventDefault();
    if (message.trim()) {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
      alert('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');
      setMessage('');
    }
  };

  return (
    <div className="support">
      {/* Header Card */}
      <div className="card header-card">
        <div className="header-content">
          <div className="header-icon">
            <MessageCircle size={32} />
          </div>
          <div className="header-text">
            <h2>–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏</h2>
            <p>–ú—ã –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –≤–∞–º 24/7</p>
          </div>
        </div>
      </div>

      {/* Support Methods */}
      <div className="card methods-card">
        <h3>–°–ø–æ—Å–æ–±—ã —Å–≤—è–∑–∏</h3>
        <div className="methods-grid">
          {supportMethods.map((method) => {
            const Icon = method.icon;
            return (
              <button
                key={method.id}
                className={`method-btn ${selectedMethod === method.id ? 'active' : ''}`}
                onClick={() => setSelectedMethod(method.id)}
                style={{ '--method-color': method.color }}
              >
                <div className="method-icon">
                  <Icon size={24} />
                </div>
                <div className="method-content">
                  <h4>{method.title}</h4>
                  <p>{method.subtitle}</p>
                  <span className="response-time">{method.responseTime}</span>
                </div>
              </button>
            );
          })}
        </div>
      </div>

      {/* Selected Method Details */}
      <div className="card details-card">
        {selectedMethod === 'chat' && (
          <div className="method-details">
            <div className="method-header">
              <MessageCircle size={24} />
              <div>
                <h3>–û–Ω–ª–∞–π–Ω —á–∞—Ç</h3>
                <p>–ù–∞—á–Ω–∏—Ç–µ —á–∞—Ç –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å</p>
              </div>
            </div>
            
            <div className="chat-status">
              <div className="status-indicator status-connected"></div>
              <span>–û–Ω–ª–∞–π–Ω - –¥–æ—Å—Ç—É–ø–µ–Ω</span>
            </div>
            
            <button className="btn start-chat-btn">
              <MessageCircle size={20} />
              <span>–ù–∞—á–∞—Ç—å —á–∞—Ç</span>
            </button>
          </div>
        )}

        {selectedMethod === 'email' && (
          <div className="method-details">
            <div className="method-header">
              <Mail size={24} />
              <div>
                <h3>Email –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
                <p>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ</p>
              </div>
            </div>
            
            <form onSubmit={handleSubmit} className="email-form">
              <textarea
                placeholder="–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É..."
                value={message}
                onChange={(e) => setMessage(e.target.value)}
                className="message-input"
                rows={6}
              />
              <button type="submit" className="btn send-btn" disabled={!message.trim()}>
                <Send size={20} />
                <span>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</span>
              </button>
            </form>
          </div>
        )}

        {selectedMethod === 'phone' && (
          <div className="method-details">
            <div className="method-header">
              <Phone size={24} />
              <div>
                <h3>–¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h3>
                <p>–ü–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º</p>
              </div>
            </div>
            
            <div className="phone-info">
              <div className="phone-number">
                <Phone size={20} />
                <span>8-800-555-0123</span>
              </div>
              <p className="phone-description">–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫ –ø–æ –†–æ—Å—Å–∏–∏</p>
            </div>
            
            <button className="btn call-btn">
              <Phone size={20} />
              <span>–ü–æ–∑–≤–æ–Ω–∏—Ç—å</span>
            </button>
          </div>
        )}
      </div>

      {/* Quick Topics */}
      <div className="card topics-card">
        <h3>–ë—ã—Å—Ç—Ä—ã–µ —Ç–µ–º—ã</h3>
        <div className="topics-grid">
          {quickTopics.map((topic, index) => {
            const Icon = topic.icon;
            return (
              <button key={index} className="topic-btn">
                <Icon size={20} />
                <span>{topic.title}</span>
              </button>
            );
          })}
        </div>
      </div>

      {/* Working Hours */}
      <div className="card hours-card">
        <div className="hours-header">
          <Clock size={24} />
          <h3>–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</h3>
        </div>
        
        <div className="hours-list">
          {workingHours.map((schedule, index) => (
            <div key={index} className="hours-item">
              <span className="day">{schedule.day}</span>
              <span className="time">{schedule.time}</span>
            </div>
          ))}
        </div>
        
        <div className="emergency-support">
          <div className="emergency-icon">üö®</div>
          <div className="emergency-text">
            <h4>–≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</h4>
            <p>–î–æ—Å—Ç—É–ø–Ω–∞ 24/7 –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º</p>
          </div>
        </div>
      </div>

      {/* Contact Info */}
      <div className="card contact-card">
        <h3>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
        <div className="contact-info">
          <div className="contact-item">
            <Mail size={16} />
            <span>support@securevpn.com</span>
          </div>
          <div className="contact-item">
            <Phone size={16} />
            <span>8-800-555-0123</span>
          </div>
          <div className="contact-item">
            <Clock size={16} />
            <span>24/7 –ø–æ–¥–¥–µ—Ä–∂–∫–∞</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Support; 